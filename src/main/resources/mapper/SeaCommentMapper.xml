<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.site.vs.videostation.mapper.SeaCommentMapper">

  <resultMap id="BaseResultMap" type="com.site.vs.videostation.entity.SeaComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="v_id" jdbcType="INTEGER" property="vId" />
    <result column="typeid" jdbcType="SMALLINT" property="typeid" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="ip" jdbcType="CHAR" property="ip" />
    <result column="ischeck" jdbcType="SMALLINT" property="ischeck" />
    <result column="dtime" jdbcType="INTEGER" property="dtime" />
    <result column="m_type" jdbcType="INTEGER" property="mType" />
    <result column="reply" jdbcType="INTEGER" property="reply" />
    <result column="agree" jdbcType="INTEGER" property="agree" />
    <result column="anti" jdbcType="INTEGER" property="anti" />
    <result column="pic" jdbcType="CHAR" property="pic" />
    <result column="vote" jdbcType="INTEGER" property="vote" />
    <result column="msg" jdbcType="LONGVARCHAR" property="msg" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sea_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.site.vs.videostation.entity.SeaComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      UUID
    </selectKey>
    insert into sea_comment (uid, v_id, typeid, 
      username, ip, ischeck, dtime, 
      m_type, reply, agree, 
      anti, pic, vote, msg
      )
    values (#{uid,jdbcType=INTEGER}, #{vId,jdbcType=INTEGER}, #{typeid,jdbcType=SMALLINT}, 
      #{username,jdbcType=CHAR}, #{ip,jdbcType=CHAR}, #{ischeck,jdbcType=SMALLINT}, #{dtime,jdbcType=INTEGER}, 
      #{mType,jdbcType=INTEGER}, #{reply,jdbcType=INTEGER}, #{agree,jdbcType=INTEGER}, 
      #{anti,jdbcType=INTEGER}, #{pic,jdbcType=CHAR}, #{vote,jdbcType=INTEGER}, #{msg,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.site.vs.videostation.entity.SeaComment">
    update sea_comment
    set uid = #{uid,jdbcType=INTEGER},
      v_id = #{vId,jdbcType=INTEGER},
      typeid = #{typeid,jdbcType=SMALLINT},
      username = #{username,jdbcType=CHAR},
      ip = #{ip,jdbcType=CHAR},
      ischeck = #{ischeck,jdbcType=SMALLINT},
      dtime = #{dtime,jdbcType=INTEGER},
      m_type = #{mType,jdbcType=INTEGER},
      reply = #{reply,jdbcType=INTEGER},
      agree = #{agree,jdbcType=INTEGER},
      anti = #{anti,jdbcType=INTEGER},
      pic = #{pic,jdbcType=CHAR},
      vote = #{vote,jdbcType=INTEGER},
      msg = #{msg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, uid, v_id, typeid, username, ip, ischeck, dtime, m_type, reply, agree, 
    anti, pic, vote, msg
    from sea_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, uid, v_id, typeid, username, ip, ischeck, dtime, m_type, reply, agree, 
    anti, pic, vote, msg
    from sea_comment
  </select>
</mapper>